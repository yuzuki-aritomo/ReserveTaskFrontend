openapi: "3.0.1"
info:
  title: "Rails Reservation Api"
  description: "Reservatin Api Document"
  termsOfService: "http://swagger.io/terms/"
  version: "1.0.0"
servers:
- url: "https://localhost:3001/"

tags:
- name: "reservation"
  description: "user予約用"
- name: "reception"
  description: "fp予約受付"
- name: "auth"
  description: "認証処理"

paths:
  #user 予約関連
  /reservations/openings:
    get:
      tags:
      - "reservation"
      summary: "予約可能一覧取得"
      parameters:
      - name: "start"
        description: "取得開始日時"
        in: "query"
        schema:
          type: "string"
          format: "date-time"
          example: "2020-09-30T02:21:12+09:00"
      - name: "end"
        description: "取得終了日時"
        in: "query"
        schema:
          type: "string"
          format: "date-time"
          example: "2020-09-30T02:21:12+09:00"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservations'
  /reservations:
    get:
      tags:
      - "reservation"
      summary: "予約完了一覧取得"
      parameters:
      - name: "start"
        description: "取得開始日時"
        in: "query"
        schema:
          type: "string"
          format: "date-time"
          example: "2020-09-30T02:21:12+09:00"
      - name: "end"
        description: "取得終了日時"
        in: "query"
        schema:
          type: "string"
          format: "date-time"
          example: "2020-09-30T02:21:12+09:00"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservations'
  /reservations/{reservation_id}:
    get:
      tags:
      - "reservation"
      summary: "予約詳細情報取得"
      parameters:
      - name: "reservation_id"
        in: "path"
        description: "予約id"
        schema:
          type: "integer"
          format: "int32"
          example: 1
        required: true
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
    post:
      tags:
      - "reservation"
      summary: "予約登録"
      parameters:
      - name: "reservation_id"
        in: "path"
        description: "予約id"
        schema:
          type: "integer"
          format: "int32"
          example: 1
        required: true
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
    delete:
      tags:
      - "reservation"
      summary: "予約キャンセル"
      parameters:
      - name: "reservation_id"
        in: "path"
        description: "予約id"
        schema:
          type: "integer"
          format: "int32"
          example: 1
        required: true
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'

  #fp 予約関連
  /receptions:
    get:
      tags:
      - "reception"
      summary: "fp予約登録一覧取得"
      parameters:
      - name: "start"
        description: "取得開始日時"
        in: "query"
        schema:
          type: "string"
          format: "date-time"
          example: "2020-09-30T02:21:12+09:00"
      - name: "end"
        description: "取得終了日時"
        in: "query"
        schema:
          type: "string"
          format: "date-time"
          example: "2020-09-30T02:21:12+09:00"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receptions'
    post:
      tags:
      - "reception"
      summary: "fp予約可能日時登録"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                register_date:
                  type: "array"
                  items:
                    type: "string"
                    format: "date-time"
            example:
              register_date:
              - "2020-09-30T02:21:12+09:00"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reception'
  /receptions/cancels:
    get:
      tags:
      - "reception"
      summary: "予約キャンセル情報"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Receptions'
  /receptions/{reception_id}:
    delete:
      tags:
      - "reception"
      summary: "予約削除"
      parameters:
      - name: "reception_id"
        in: "path"
        description: "予約id"
        schema:
          type: "integer"
          format: "int32"
          example: 1
        required: true
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reception'
  /auth:
    post:
      tags:
      - "auth"
      summary: "新規登録"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
  /auth/sign_in:
    post:
      tags:
      - "auth"
      summary: "ログイン"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
  /auth/sign_out:
    post:
      tags:
      - "auth"
      summary: "ログアウト"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignOutRequest'
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignOutResponse'
components:
  schemas:
    Reservation:
      type: "object"
      required:
      - "reservation_id"
      properties:
        reservation_id:
          type: "integer"
          format: "int32"
        fp_name:
          type: "string"
        start:
          type: "string"
          format: "date-time"
        end:
          type: "string"
          format: "date-time"
        reserved:
          type: "boolean"
        canceled:
          type: "boolean"
      example:
        reservation_id: 2
        fp_name: "taro"
        start: "2020-09-30T02:00:12+09:00"
        end: "2020-09-30T02:30:12+09:00"
        reserved: true
        canceled: false
    Reservations:
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: '#/components/schemas/Reservation'
      example:
        data:
        - reservation_id: 2
          fp_name: "taro"
          start: "2020-09-30T02:00:12+09:00"
          end: "2020-09-30T02:30:12+09:00"
          reserved: true
          canceled: false
    Reception:
      type: "object"
      required:
      - "reception_id"
      properties:
        reception_id:
          type: "integer"
          format: "int32"
        user_name:
          type: "string"
        start:
          type: "string"
          format: "date-time"
        end:
          type: "string"
          format: "date-time"
        reserved:
          type: "boolean"
      example:
        reception_id: 2
        user_name: "taro"
        start: "2020-09-30T02:00:12+09:00"
        end: "2020-09-30T02:30:12+09:00"
        reserved: true
    Receptions:
      type: "object"
      properties:
        data:
          type: "array"
          items:
            $ref: '#/components/schemas/Reception'
      example:
        data:
        - reception_id: 2
          user_name: "taro"
          start: "2020-09-30T02:00:12+09:00"
          end: "2020-09-30T02:30:12+09:00"
          reserved: true
    SignUpRequest:
      type: "object"
      properties:
        email:
          description: "email"
          type: "string"
          format: "email"
        password:
          description: "password"
          type: "string"
          format: "password"
    SignUpResponse:
      type: "object"
      properties:
        status:
          type: "string"
        data:
          type: "object"
          properties:
            uid:
              type: "string"
            id:
              type: "integer"
              format: "int32"
            email:
              type: "string"
              format: "email"
            provider:
              type: "string"
            allow_password_change:
              type: "boolean"
            name:
              type: "string"
            created_at:
              type: "string"
              format: "date-time"
            updated_at:
              type: "string"
              format: "date-time"
      example:
        status: "success"
        data:
          uid: "test@gmail.com"
          id: 1
          email: "test@gmail.com"
          provider: "email"
          allow_password_change: false
          name: ""
          created_at: "2020-09-30T02:21:12+09:00"
          updated_at: "2020-09-30T02:21:12+09:00"
    SignInRequest:
      type: "object"
      properties:
        email:
          description: "email"
          type: "string"
          format: "email"
        password:
          description: "password"
          type: "string"
          format: "password"
    SignInResponse:
      type: "object"
      properties:
        data:
          type: "object"
          properties:
            uid:
              type: "string"
            id:
              type: "integer"
            email:
              type: "string"
              format: "email"
            provider:
              type: "string"
            allow_password_change:
              type: "boolean"
            name:
              type: "string"
      example:
        data:
          uid: "test@gmail.com"
          id: 1
          email: "test@gmail.com"
          provider: "email"
          allow_password_change: false
          name: ""
    SignOutRequest:
      type: "object"
      properties:
        email:
          description: "email"
          type: "string"
          format: "email"
        access-token:
          description: "acccess token"
          type: "string"
        client:
          description: "client"
          type: "string"
    SignOutResponse:
      type: "object"
      properties:
        success:
          type: "boolean"
      example:
        success: true